name: Build
description: Builds and (optionally) uploads artifacts to the release.
inputs:
  runtime:
    required: true
    description: "Target runtime identifier (e.g., win-x64, win-arm64)"
  self-contained:
    required: true
    description: "Whether to build as self-contained (true/false)"
  version:
    required: true
    description: "Version to set in the assembly"
  release_created:
    required: true
    description: "Indicates if a release was created in the previous job"
  tag_name:
    required: false
    description: "Tag name for the release, if applicable"

runs:
  using: "composite"
  steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Update csproj file assembly version
      shell: pwsh
      run: |
        # Update the assembly version in the csproj file
        $csprojPath = "src/thirds-for-windows11/thirds-for-windows11.csproj"
        [xml]$csproj = Get-Content $csprojPath
        $csproj.Project.PropertyGroup.AssemblyVersion.InnerText = "${{ needs.release-please.outputs.version }}.0"
        $csproj.Project.PropertyGroup.FileVersion.InnerText = "${{ needs.release-please.outputs.version }}.0"
        $csproj.Project.PropertyGroup.Version.InnerText = "${{ needs.release-please.outputs.version }}"
        $csproj.Save($csprojPath)

    - name: Test publish for ${{ matrix.runtime }}
      shell: pwsh
      run: |
        dotnet publish src/thirds-for-windows11/thirds-for-windows11.csproj `
          --configuration Release `
          --runtime ${{ matrix.runtime }} `
          --self-contained ${{ matrix.self-contained }} `
          --output ./test-publish/${{ matrix.runtime }}.self-contained-${{ matrix.self-contained }} `

    - name: Verify published executable
      shell: pwsh
      run: |
        $exePath = "./test-publish/${{ matrix.runtime }}.self-contained-${{ matrix.self-contained }}/thirds-for-windows11.exe"
        if (Test-Path $exePath) {
          $fileInfo = Get-Item $exePath
          Write-Host "✅ Published executable for ${{ matrix.runtime }}: $($fileInfo.Length) bytes"
        } else {
          Write-Host "❌ Published executable not found for ${{ matrix.runtime }}"
          exit 1
        }

    - name: Upload executable as artifact
      if: ${{ needs.release-please.outputs.release_created == false }}
      uses: actions/upload-artifact@v4
      with:
        name: "thirds-for-windows11-${{ matrix.runtime }}-self-contained-${{ matrix.self-contained }}"
        path: "./test-publish/${{ matrix.runtime }}.self-contained-${{ matrix.self-contained }}/thirds-for-windows11.exe"

    - name: Upload Release Artifact
      shell: pwsh
      if: ${{ steps.release.outputs.release_created }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh release upload ${{ steps.release.outputs.tag_name }} ./test-publish/${{ matrix.runtime }}.self-contained-${{ matrix.self-contained }}/thirds-for-windows11-v${{ needs.release-please.outputs.version }}.exe
